log4j.rootLogger=DEBUG,info,my,fileAppender
#rootLogger=日志级别,appenderName1,appenderName2,.....
#日志级别, DEBUG<INFO<WARN<ERROR<FATAL....OFF,ALL
# 只会输出>=日志级别的日志内容
#appenderName 指定日志信息输出至哪里，可以同时指定多个输出目的地，用逗号隔开 info,my,fileAppender

### direct log messages to my  输出至控制台-ConsoleAppender###
log4j.appender.my=org.apache.log4j.ConsoleAppender
#ImmediateFlush 表示所有消息都会被立即输出，设为false则不输出，默认为true
log4j.appender.my.ImmediateFlush = true
#System.err使用错误输出（红色），，，，默认System.out系统正常输出（黑色）
log4j.appender.my.Target=System.out
#指定布局PatternLayout 输出格式-->%d %t %5p %c{1}:%L - %m%n
log4j.appender.my.layout=org.apache.log4j.PatternLayout
log4j.appender.my.layout.ConversionPattern=%d %t %5p %c{1}:%L - %m%n

# fileAppender输出至文件-FileAppender
log4j.appender.fileAppender=org.apache.log4j.FileAppender
#ImmediateFlush 表示所有消息都会被立即输出，设为false则不输出，默认为true
log4j.appender.fileAppender.ImmediateFlush = true
#Append true表示添加搭配指定文件中，不覆盖原文件，false表示会覆盖原文件
log4j.appender.fileAppender.Append=true
# 文件名称log4j-log.log和#位置./
log4j.appender.fileAppender.File=./log/log4j-log.log
#指定布局PatternLayout 输出格式-->%d %5p %c{1}:%L - %m%n
log4j.appender.fileAppender.layout=org.apache.log4j.PatternLayout
log4j.appender.fileAppender.layout.ConversionPattern=%d %5p %c{1}:%L - %m%n
#log4j.appender.stdout=org.apache.log4j.ConsoleAppender
#log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
#log4j.appender.stdout.layout.ConversionPattern=%5p [%t] - %m%n
